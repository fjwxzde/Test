name: Auto Label Issues and PRs

on:
  issues:
    types: [opened]  # 监听 Issue 创建
  pull_request:
    types: [opened]  # 监听 PR 创建

jobs:
  label:
    runs-on: ubuntu-latest

    steps:
      - name: Set labels for Issues and PRs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # 获取 Issue 或 PR 的标题和正文并将标题和正文 转换为小写
          TITLE=$(echo "${{ github.event.issue.title }}" | tr '[:upper:]' '[:lower:]')
          BODY=$(echo "${{ github.event.issue.body }}" | tr '[:upper:]' '[:lower:]')
          PR_TITLE=$(echo "${{ github.event.pull_request.title }}" | tr '[:upper:]' '[:lower:]')
          PR_BODY=$(echo "${{ github.event.pull_request.body }}" | tr '[:upper:]' '[:lower:]')

          # 判断是否是 PR，如果是 PR，使用 PR 的标题和正文来设置标签 (即使后面统一用TITLE/BODY)
          if [ ! -z "$PR_TITLE" ]; then
            TITLE="$PR_TITLE"
            BODY="$PR_BODY"
          fi

          # 获取现有标签
          EXISTING_LABELS=$(gh issue view "${{ github.event.issue.number }}" --repo "${{ github.repository }}" --json labels -q '.labels | .[].name')

          # 检查是否已有标签，如果没有标签则先添加“需要分类”标签
          if [ -z "$EXISTING_LABELS" ]; then
            gh issue edit "${{ github.event.issue.number }}" --repo "${{ github.repository }}" --add-label "需要分类"

            # 定义标签规则和对应标签的注释
            declare -A label_rules
            label_rules=(
              ["优化"]="pref|优化|optimize"
              ["新功能"]="feat|新功能|新增|add|new"
              ["缺少"]="缺少|少了"
              ["工作流"]="workflow|工作流|自动化|action"
              ["bug"]="bug|错误|异常|问题"
            )

            # 默认分类为无法分类
            label="无法分类"
            comment="无法为此 Issue/PR 自动分类标签"

            # 遍历标签规则并匹配
            for label_key in "${!label_rules[@]}"; do
              if echo "$TITLE $BODY" | grep -q -E "${label_rules[$label_key]}"; then
                label="$label_key"
                comment="此 Issue/PR 已自动分类标签"
                break
              fi
            done

            # 添加标签和评论
            gh issue edit "${{ github.event.issue.number }}" --repo "${{ github.repository }}" --add-label "$label"
            gh issue comment "${{ github.event.issue.number }}" --repo "${{ github.repository }}" --body "$comment"
          fi

